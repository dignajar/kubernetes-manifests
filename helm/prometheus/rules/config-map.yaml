---
apiVersion: v1
kind: ConfigMap
metadata:
  name: prometheus-rules
  namespace: prometheus
data:
  nodes.yml: |
    groups:
    - name: nodes
      rules:
      - alert: NodeOutOfMemory
        expr: node_memory_MemAvailable_bytes / node_memory_MemTotal_bytes * 100 < 10
        for: 2m
        labels:
          team: devops
        annotations:
          environment: qa
          summary: Node out of memory (instance {{ $labels.kubernetes_node }})
          description: "Node memory is filling up (< 10% left)"

      - alert: NodeHighCpuLoad
        expr: 100 - (avg by(instance) (rate(node_cpu_seconds_total{mode="idle"}[2m])) * 100) > 80
        for: 0m
        labels:
          team: devops
        annotations:
          environment: qa
          summary: Node high CPU load (instance {{ $labels.kubernetes_node }})
          description: "CPU load is > 80%"

      - alert: NodeUnusualNetworkThroughputIn
        expr: sum by (instance) (rate(node_network_receive_bytes_total[2m])) / 1024 / 1024 > 100
        for: 5m
        labels:
          team: devops
        annotations:
          environment: qa
          summary: Node unusual network throughput in (instance {{ $labels.kubernetes_node }})
          description: "Node network interfaces are probably receiving too much data (> 100 MB/s)"

      - alert: NodeUnusualNetworkThroughputOut
        expr: sum by (instance) (rate(node_network_transmit_bytes_total[2m])) / 1024 / 1024 > 100
        for: 5m
        labels:
          team: devops
        annotations:
          environment: qa
          summary: Node unusual network throughput out (instance {{ $labels.kubernetes_node }})
          description: "Node network interfaces are probably sending too much data (> 100 MB/s)"

      - alert: NodeOutOfDiskSpace
        expr: (node_filesystem_avail_bytes * 100) / node_filesystem_size_bytes < 10 and ON (instance, device, mountpoint) node_filesystem_readonly == 0
        for: 2m
        labels:
          team: devops
        annotations:
          environment: qa
          summary: Node out of disk space (instance {{ $labels.kubernetes_node }})
          description: "Disk is almost full (< 10% left)"

      - alert: NodeOutOfInodes
        expr: node_filesystem_files_free{mountpoint ="/rootfs"} / node_filesystem_files{mountpoint="/rootfs"} * 100 < 10 and ON (instance, device, mountpoint) node_filesystem_readonly{mountpoint="/rootfs"} == 0
        for: 2m
        labels:
          team: devops
        annotations:
          environment: qa
          summary: Node out of inodes (instance {{ $labels.kubernetes_node }})
          description: "Disk is almost running out of available inodes (< 10% left)"

  kubernetes.yml: |
    groups:
    - name: kubernetes
      rules:
      - alert: KubernetesContainerOomKiller
        expr: (kube_pod_container_status_restarts_total - kube_pod_container_status_restarts_total offset 10m >= 1) and ignoring (reason) min_over_time(kube_pod_container_status_last_terminated_reason{reason="OOMKilled"}[10m]) == 1
        for: 0m
        labels:
          team: devops
        annotations:
          environment: qa
          summary: Kubernetes container OOM killer.
          description: "Container {{ $labels.container }} in pod {{ $labels.namespace }}/{{ $labels.pod }} has been OOMKilled {{ $value }} times in the last 10 minutes."

      - alert: KubernetesMemoryPressure
        expr: kube_node_status_condition{condition="MemoryPressure",status="true"} == 1
        for: 2m
        labels:
          team: devops
        annotations:
          environment: qa
          summary: Kubernetes memory pressure.
          description: "{{ $labels.node }} has MemoryPressure condition."

      - alert: KubernetesDiskPressure
        expr: kube_node_status_condition{condition="DiskPressure",status="true"} == 1
        for: 2m
        labels:
          team: devops
        annotations:
          environment: qa
          summary: Kubernetes disk pressure.
          description: "{{ $labels.node }} has DiskPressure condition."

      - alert: KubernetesPersistentvolumeclaimPending
        expr: kube_persistentvolumeclaim_status_phase{phase="Pending"} == 1
        for: 2m
        labels:
          team: devops
        annotations:
          environment: qa
          summary: Kubernetes PersistentVolumeClaim pending.
          description: "PersistentVolumeClaim {{ $labels.namespace }}/{{ $labels.persistentvolumeclaim }} is pending."

      - alert: KubernetesPodNotHealthy
        expr: min_over_time(sum by (namespace, pod) (kube_pod_status_phase{phase=~"Pending|Unknown|Failed"})[15m:1m]) > 0
        for: 0m
        labels:
          team: devops
        annotations:
          environment: qa
          summary: Kubernetes Pod not healthy.
          description: Pod {{ $labels.namespace }}/{{ $labels.pod }} has been in a non-ready state for longer than 15 minutes.

      - alert: KubernetesPodCrashLooping
        expr: increase(kube_pod_container_status_restarts_total[1m]) > 3
        for: 2m
        labels:
          team: devops
        annotations:
          environment: qa
          summary: Kubernetes pod crash looping.
          description: "Pod {{ $labels.namespace }}/{{ $labels.pod }} is crash looping."

  flux.yml: |
    groups:
    - name: flux
      rules:
      - alert: FluxReconciliationFailure
        expr: max(gotk_reconcile_condition{status="False",type="Ready"}) by (namespace, name, kind) + on(namespace, name, kind) (max(gotk_reconcile_condition{status="Deleted"}) by (namespace, name, kind)) * 2 == 1
        for: 15m
        labels:
          team: devops
        annotations:
          environment: qa
          summary: '{{ $labels.kind }} {{ $labels.namespace }}/{{ $labels.name }} reconciliation has been failing for more than 15 minutes.'